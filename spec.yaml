openapi: 3.0.0
paths:
  /v1/health:
    get:
      operationId: HealthController_check
      summary: Check the application's health
      parameters: []
      responses:
        "200":
          description: The Health Check is successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: ok
                  info:
                    type: object
                    example: &a1
                      database: &a2
                        status: up
                    additionalProperties:
                      type: object
                      properties:
                        status:
                          type: string
                      additionalProperties:
                        type: string
                    nullable: true
                  error:
                    type: object
                    example: {}
                    additionalProperties:
                      type: object
                      properties:
                        status:
                          type: string
                      additionalProperties:
                        type: string
                    nullable: true
                  details:
                    type: object
                    example: *a1
                    additionalProperties:
                      type: object
                      properties:
                        status:
                          type: string
                      additionalProperties:
                        type: string
        "503":
          description: The Health Check is not successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  info:
                    type: object
                    example: *a1
                    additionalProperties:
                      type: object
                      properties:
                        status:
                          type: string
                      additionalProperties:
                        type: string
                    nullable: true
                  error:
                    type: object
                    example:
                      redis: &a3
                        status: down
                        message: Could not connect
                    additionalProperties:
                      type: object
                      properties:
                        status:
                          type: string
                      additionalProperties:
                        type: string
                    nullable: true
                  details:
                    type: object
                    example:
                      database: *a2
                      redis: *a3
                    additionalProperties:
                      type: object
                      properties:
                        status:
                          type: string
                      additionalProperties:
                        type: string
      tags:
        - Health
      security:
        - basic: []
  /v1/decisions:
    post:
      operationId: makeDecisions
      summary: Make decisions for users
      description:
        Make decisions for multiple flags across multiple projects for a
        given visitor. Specifying flag keys as an empty array for a project will
        lead to all decisions for all flags in the project being returned. If
        the Adobe MCID is not passed and is configured as the identifier for a
        given project, the Optimizely End User ID will be used as a fallback. In
        this scenario decision tracking is disabled. When a user does not
        qualify to take part in a flag rule due to not being in the associated
        audience, a variationKey of '' will be returned.
      parameters:
        - name: X-SkyOTT-Provider
          required: false
          in: header
          description: The OTT provider for the user
          schema:
            enum:
              - SKY
            type: string
        - name: X-SkyOTT-Territory
          required: false
          in: header
          description: The OTT territory for the user
          schema:
            enum:
              - GB
              - GBR
              - UK
              - IE
              - IRL
              - ROI
              - IT
              - ITA
            type: string
      requestBody:
        required: true
        description:
          A list of project decision contexts that specify the flags to make
          decisions for across projects
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DecisionsRequest"
      responses:
        "200":
          description: Response when the request was handled successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProjectDecisions"
        "400":
          description: Response when validation checks are not passed
          content:
            application/json:
              schema:
                example:
                  message:
                    - projectKey should not be empty
                  error: Bad Request
                  statusCode: 400
                type: object
                properties:
                  message:
                    type: array
                    items:
                      type: string
                  error:
                    type: string
                  statusCode:
                    type: number
      tags:
        - Decisions
      security:
        - basic: []
  /v1/events:
    post:
      operationId: trackEvents
      summary: Track events for users
      description: Send event and user details to analytics backends for tracking.
      parameters:
        - name: X-SkyOTT-Provider
          required: false
          in: header
          description: The OTT provider for the user
          schema:
            enum:
              - SKY
            type: string
        - name: X-SkyOTT-Territory
          required: false
          in: header
          description: The OTT territory for the user
          schema:
            enum:
              - GB
              - GBR
              - UK
              - IE
              - IRL
              - ROI
              - IT
              - ITA
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Event"
      responses:
        "204":
          description: Response when the request was handled successfully
        "400":
          description: Response when validation checks are not passed
          content:
            application/json:
              schema:
                example:
                  message:
                    - eventKey should not be empty
                  error: Bad Request
                  statusCode: 400
                type: object
                properties:
                  message:
                    type: array
                    items:
                      type: string
                  error:
                    type: string
                  statusCode:
                    type: number
      tags:
        - Events
      security:
        - basic: []
info:
  title: DT Experimentation Service
  description: A service purposed with making experimentation decisions
  version: 1.3.0
  contact: {}
tags: []
servers:
  - url: https://dt-experimentation-service-main-u01.cf.dev-paas.bskyb.com
components:
  securitySchemes:
    basic:
      type: http
      scheme: basic
  schemas:
    Project:
      type: object
      properties:
        projectKey:
          type: string
          description: The key for the project that contains the given flags
        flagKeys:
          description: The keys for the flags to make decisions for
          type: array
          items:
            type: string
        attributes:
          type: object
          description:
            An object specifying the attributes associated with the flags to
            make decisions for
        trackDecisions:
          type: boolean
          description: A flag to specify whether the decisions made should be tracked
          default: true
      required:
        - projectKey
        - flagKeys
    DecisionsRequest:
      type: object
      properties:
        adobeMcid:
          type: string
          description: The Adobe Marketing Cloud ID for the visitor
        trackingId:
          type: string
          description: The trackingId from the visitor's Identity Profile/Identity Cookie
        partyId:
          type: string
          description: The partyId from the visitor's Identity Profile
        optimizelyEndUserId:
          type: string
          description: The Optimizely End User ID for the visitor
        projects:
          type: array
          items:
            $ref: "#/components/schemas/Project"
      required:
        - projects
    Decision:
      type: object
      properties:
        variables:
          type: object
        variationKey:
          type: string
        enabled:
          type: boolean
        ruleKey:
          type: string
        flagKey:
          type: string
        errors:
          type: array
          items:
            type: string
      required:
        - variables
        - variationKey
        - enabled
        - ruleKey
        - flagKey
        - errors
    ProjectDecisions:
      type: object
      properties:
        projectKey:
          type: string
          description:
            The identifier for the project for which flag decisions have been
            made
        decisions:
          description: A list specifying the flag decisions that have been made
          type: array
          items:
            $ref: "#/components/schemas/Decision"
      required:
        - projectKey
        - decisions
    Event:
      type: object
      properties:
        adobeMcid:
          type: string
          description: The Adobe Marketing Cloud ID for the visitor
        trackingId:
          type: string
          description: The trackingId from the visitor's Identity Profile/Identity Cookie
        partyId:
          type: string
          description: The partyId from the visitor's Identity Profile
        projectKey:
          type: string
          description: The identifier for the project for which we wish to track events
        attributes:
          type: object
        eventKey:
          type: string
          description: The key of the event you wish to track
        eventTags:
          type: object
      required:
        - projectKey
        - eventKey
